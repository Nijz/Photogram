spring.application.name=instagram

server.port=8081

jwt.secret=tdePSJcYivqm3sZ2wo+tXBvunR8ltwkmlzQ/dl2CMnI=

spring.datasource.url=jdbc:postgresql://localhost:5432/instagram
spring.datasource.username=nijen
spring.datasource.password=0608
spring.datasource.driver-class-name=org.postgresql.Driver

spring.data.redis.repositories.enabled=false

hibernate.transaction.coordinator_class=jdbc

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=nijenbhut@gmail.com
spring.mail.password=vqby djyv yfux kczu
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.cache.type=redis

# Kafka Broker address
spring.kafka.bootstrap-servers=localhost:9092

# Consumer Configuration
spring.kafka.consumer.group-id=feed-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Optional: Enable logging
spring.kafka.listener.missing-topics-fatal=false
logging.level.org.apache.kafka=INFO

# MinIO Config
minio.endpoint=http://localhost:9000
minio.access-key=minioadmin
minio.secret-key=minioadmin
minio.bucket-name=nijen-photos

# Enable Prometheus endpoint
management.endpoints.web.exposure.include=health,info,prometheus

# Allow access from everywhere
management.endpoint.prometheus.enabled=true

# Configure base path if needed (optional)
management.endpoints.web.base-path=/actuator

# CASSANDRA SETTINGS
spring.data.cassandra.contact-points=127.0.0.1:9042
spring.data.cassandra.local-datacenter=datacenter1
spring.data.cassandra.keyspace-name=instagram
spring.data.cassandra.schema-action=CREATE_IF_NOT_EXISTS
spring.data.cassandra.port=9042
